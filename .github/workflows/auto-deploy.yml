name: Auto Deploy Apps Script

on:
  push:
    branches:
      - main # Change this to your main branch if it's not named 'main'
      # Add other branches here if you want pushes to them to trigger deployment
  workflow_dispatch: # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18' # Use a current LTS version like '18' or '20'

    - name: Install clasp
      run: npm install -g @google/clasp

    - name: Authenticate clasp
      run: |
        # Create the credentials file from the secret
        # IMPORTANT: Ensure your secret is named GOOGLE_CREDENTIALS_JSON
        echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > ~/.clasprc.json
        # Validate JSON format (fails if not valid)
        # jq might not be installed by default, check if needed or remove validation
        # jq empty ~/.clasprc.json || { echo "Invalid JSON in credentials"; cat ~/.clasprc.json; exit 1; }
        echo "Clasp authentication file created."

    - name: Replace API Key Placeholder
      # IMPORTANT: Ensure your secret is named PICKER_API_KEY
      # Use sed to replace the placeholder string in Admin_JS.html
      # Ensure the placeholder string exactly matches what's in your code
      run: |
        sed -i "s|developerApiKey: 'YOUR_GOOGLE_CLOUD_API_KEY_FOR_PICKER'|developerApiKey: '${{ secrets.PICKER_API_KEY }}'|" Client/Admin/Admin_JS.html
        echo "API Key placeholder replaced in Client/Admin/Admin_JS.html"

    - name: Push code to Apps Script
      # Use --force if you encounter issues with minor version bumps
      # Assumes .clasp.json in your repo root points to the correct script ID
      run: clasp push --force

    - name: Update deployment
      # If you have a specific deployment ID to update, use this format
      # IMPORTANT: Ensure your secret is named APPS_SCRIPT_DEPLOYMENT_ID if using
      run: |
        if [ -n "${{ secrets.APPS_SCRIPT_DEPLOYMENT_ID }}" ]; then
          echo "Updating existing deployment ID: ${{ secrets.APPS_SCRIPT_DEPLOYMENT_ID }}"
          clasp deploy --deploymentId ${{ secrets.APPS_SCRIPT_DEPLOYMENT_ID }} --description "Auto-deployment $(date)"
        else
          echo "Creating new deployment (no ID specified)."
          clasp deploy --description "Auto-deployment $(date)"
        fi

    # Optional: Clean up the credentials file (good practice)
    - name: Clean up credentials
      if: always() # Run even if previous steps failed
      run: rm -f ~/.clasprc.json
      